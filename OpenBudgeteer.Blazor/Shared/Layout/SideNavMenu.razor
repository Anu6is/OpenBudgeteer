@inject NavigationManager NavigationManager

<MudDrawer @bind-Open="@SideMenuDrawerOpen" Elevation="2" PreserveOpenState="true"
           ClipMode="DrawerClipMode.Always" Variant="@DrawerVariant.Mini" Color="@DrawerColor">
    <MudNavMenu Class="d-flex flex-column mud-height-full" Color="Color.Secondary">
        <MudNavLink Match="NavLinkMatch.All" Href="" Icon="@GetIcon("")" IconColor="Color.Surface">Dashboard</MudNavLink>
        <MudNavLink Match="NavLinkMatch.All" Href="account" Icon="@GetIcon("account")" IconColor="Color.Surface">Accounts</MudNavLink>
        <MudNavLink Match="NavLinkMatch.All" Href="transaction" Icon="@GetIcon("transaction")" IconColor="Color.Surface">Transactions</MudNavLink>
        <MudNavLink Match="NavLinkMatch.All" Href="bucket" Icon="@GetIcon("bucket")" IconColor="Color.Surface">Budget</MudNavLink>
        <MudNavLink Match="NavLinkMatch.All" Href="report" Icon="@GetIcon("report")" IconColor="Color.Surface">Report</MudNavLink>
        <MudNavLink Match="NavLinkMatch.All" Href="rules" Icon="@GetIcon("rules")" IconColor="Color.Surface">Rules</MudNavLink>
        <MudNavLink Match="NavLinkMatch.All" Href="dataconsistency" Icon="@GetIcon("dataconsistency")" IconColor="Color.Surface">Data Consistency</MudNavLink>
        <MudSpacer />
        <MudNavLink Class="pb-4" Match="NavLinkMatch.All" Href="about" Icon="@Icons.Material.Outlined.Info" IconColor="Color.Surface">About</MudNavLink>
    </MudNavMenu>
</MudDrawer>

@code {
    [CascadingParameter] public string? MenuItem { get;set; }
    [EditorRequired][Parameter] public bool SideMenuDrawerOpen { get; set; }

    private Color DrawerColor => SideMenuDrawerOpen ? Color.Default : Color.Primary;

    private string GetIcon(string navLink)
    {
        var isActive = navLink == MenuItem;

        return navLink switch
        {
            "" => isActive ? Icons.Material.Filled.Dashboard : Icons.Material.Outlined.Dashboard,
            "account" => isActive ? Icons.Material.Filled.AccountBalance : Icons.Material.Outlined.AccountBalance,
            "transaction" => isActive ? Icons.Material.Filled.CreditCard : Icons.Material.Outlined.LocalAtm,
            "bucket" => isActive ? Icons.Material.Filled.AccountBalanceWallet : Icons.Material.Outlined.AccountBalanceWallet,
            "report" => isActive ? Icons.Material.Filled.InsertChart : Icons.Material.Outlined.InsertChart,
            "rules" => isActive ? Icons.Material.Filled.Description : Icons.Material.Outlined.Description,
            "dataconsistency" => isActive ? Icons.Material.Filled.ChangeCircle : Icons.Material.Outlined.ChangeCircle,
            _ => throw new NotImplementedException()
        };
    }
}

