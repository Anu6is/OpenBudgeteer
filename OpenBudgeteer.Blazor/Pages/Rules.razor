@page "/rules"

@using System
@using System.Drawing
@using OpenBudgeteer.Core.Common.Extensions
@using OpenBudgeteer.Core.ViewModels.EntityViewModels

<div class="row">
    <div class="col">
        @if (_massEditEnabled)
        {
            <button class="btn btn-sm btn-primary header-action-button" @onclick="@SaveAllRules">Save all</button>
            <button class="btn btn-sm btn-danger header-action-button" @onclick="@CancelAllRules">Cancel all</button>
        }
        else
        {
            <button class="btn btn-sm btn-primary header-action-button" @onclick="@StartCreateMappingRuleSet">Create Rule</button>
            <button class="btn btn-sm btn-primary header-action-button" @onclick="@EditAllRules">Edit all</button>
        }
    </div>
</div>

@if (_newMappingRuleSetIsEnabled)
{
	<table class="table table-sm table-hover">
        <thead>
        <tr>
            <th style="text-align: right; width:110px">Priority</th>
            <th style="width:250px">Rule Name</th>
            <th style="width:300px">Target Bucket</th>
            <th>Mapping Rules</th>
        </tr>
        </thead>
        <tbody>
            <tr>
                <td><input class="form-control form-control-sm number-input" type="number" @bind="_dataContext.NewRuleSet!.Priority" /></td>
                <td><input class="form-control form-control-sm" type="text" @bind="_dataContext.NewRuleSet.Name" /></td>
                <td>
                    <button class="btn btn-sm btn-bucket" style="background-color: @ColorTranslator.ToHtml(_dataContext.NewRuleSet.TargetBucketColor)" @onclick="() => HandleShowSelectBucketDialog(_dataContext.NewRuleSet)">
                        @_dataContext.NewRuleSet.TargetBucketName
                    </button>
                </td>
                <td>
                    <table class="table table-borderless" style="margin-bottom: auto;">
                        <tbody>
                            @foreach (var mappingRule in _dataContext.NewRuleSet.MappingRules)
                            {
                                <tr>
                                    <td style="width: 120px">
                                        <select class="form-select form-select-sm"
                                                @bind:get="mappingRule.ComparisionField.ToString()"
                                                @bind:set="(value) => { mappingRule.ComparisionField = (MappingRuleViewModel.MappingComparisionField)Convert.ToInt32(value); }">
                                            @for (int i = 1; i <= 4; i++)
                                            {
                                                <option value="@i">@(((MappingRuleViewModel.MappingComparisionField)i).GetStringValue())</option>
                                            }
                                        </select>
                                    </td>
                                    <td style="width: 160px">
                                        <select class="form-select form-select-sm"
                                                @bind:get="mappingRule.ComparisionType.ToString()"
                                                @bind:set="(value) => { mappingRule.ComparisionType = (MappingRuleViewModel.MappingComparisionType)Convert.ToInt32(value); }">
                                            @for (int i = 1; i <= 4; i++)
                                            {
                                                <option value="@i">@(((MappingRuleViewModel.MappingComparisionType)i).GetStringValue())</option>
                                            }
                                        </select>
                                    </td>
                                    <td>
                                        <input class="form-control form-control-sm" type="text" @bind="mappingRule.ComparisionValue" />
                                    </td>
                                    <td class="col-buttons" style="width: 1px">
                                        <button class="btn btn-sm btn-primary bi bi-plus-lg" @onclick="@(() => _dataContext.NewRuleSet.AddEmptyMappingRule())"></button>
                                        <button class="btn btn-sm btn-danger bi bi-x-lg" @onclick="@(() => _dataContext.NewRuleSet.DeleteMappingRule(mappingRule))"></button>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </td>
                <td class="col-buttons">
                    <button class="btn btn-sm btn-primary bi bi-check-lg" @onclick="@(() => HandleResult(_dataContext.CreateNewRuleSet()))"></button>
                    <button class="btn btn-sm btn-danger bi bi-x-lg" @onclick="@CancelNewBucketRule"></button>
                </td>
            </tr>
        </tbody>
    </table>
}

<table class="table table-sm table-hover">
    <thead>
    <tr>
        <th style="text-align: right; width:110px">Priority</th>
        <th style="width:250px">Rule Name</th>
        <th style="width:300px">Target Bucket</th>
        <th>Mapping Rules</th>
    </tr>
    </thead>
    <tbody>
    @foreach (var ruleSet in _dataContext.RuleSets)
    {
        @if (ruleSet.InModification)
        {
            <tr>
                <td><input class="form-control form-control-sm number-input" type="number" @bind="ruleSet.Priority" /></td>
                <td><input class="form-control form-control-sm" type="text" @bind="ruleSet.Name" /></td>
                <td>
                    <button class="btn btn-sm btn-bucket" style="background-color: @ColorTranslator.ToHtml(ruleSet.TargetBucketColor)" @onclick="() => HandleShowSelectBucketDialog(ruleSet)">
                        @ruleSet.TargetBucketName
                    </button>
                </td>
                <td>
                    <table class="table table-borderless" style="margin-bottom: auto;">
                        <tbody>
                        @foreach (var mappingRule in ruleSet.MappingRules)
                        {
                            <tr>
                                <td style="width: 120px">
                                    <select class="form-select form-select-sm"
                                            @bind:get="((int)mappingRule.ComparisionField).ToString()"
                                            @bind:set="(value) => { mappingRule.ComparisionField = (MappingRuleViewModel.MappingComparisionField)Convert.ToInt32(value); }">
                                        @for (int i = 1; i <= 4; i++)
                                        {
                                            <option value="@i">@(((MappingRuleViewModel.MappingComparisionField)i).GetStringValue())</option>
                                        }
                                    </select>
                                </td>
                                <td style="width: 160px">
                                    <select class="form-select form-select-sm"
                                            @bind:get="((int)mappingRule.ComparisionType).ToString()"
                                            @bind:set="(value) => { mappingRule.ComparisionType = (MappingRuleViewModel.MappingComparisionType)Convert.ToInt32(value); }">
                                        @for (int i = 1; i <= 4; i++)
                                        {
                                            <option value="@i">@(((MappingRuleViewModel.MappingComparisionType)i).GetStringValue())</option>
                                        }
                                    </select>
                                </td>
                                <td>
                                    <input class="form-control form-control-sm" type="text" @bind="mappingRule.ComparisionValue" />
                                </td>
                                <td class="col-buttons" style="width: 1px">
                                    <button class="btn btn-sm btn-primary bi bi-plus-lg" @onclick="@(() => ruleSet.AddEmptyMappingRule())"></button>
                                    <button class="btn btn-sm btn-danger bi bi-x-lg" @onclick="@(() => ruleSet.DeleteMappingRule(mappingRule))"></button>
                                </td>
                            </tr>
                        }
                        </tbody>
                    </table>
                </td>
                <td class="col-buttons">
                    <button class="btn btn-sm btn-primary bi bi-check-lg" @onclick="@(async () => await HandleResult(_dataContext.SaveRuleSetItem(ruleSet)))"></button>
                    <button class="btn btn-sm btn-danger bi bi-x-lg" @onclick="@(() => ruleSet.CancelModification())"></button>
                </td>
            </tr>
        }
        else
        {
            <tr>
                <td class="col-numbers">@ruleSet.Priority</td>
                <td>@ruleSet.Name</td>
                <td><div style="background-color: @ColorTranslator.ToHtml(ruleSet.TargetBucketColor); border-radius: 25px; padding: 5px 10px">@ruleSet.TargetBucketName</div></td>
                <td>
                    <ul>
                        @foreach (var mappingRule in ruleSet.MappingRules)
                        {
                            <li>@mappingRule.RuleOutput</li>
                        }
                    </ul>
                </td>
                <td class="col-buttons">
                    <button class="btn btn-sm btn-primary bi bi-pencil" @onclick="@ruleSet.StartModification"></button>
                    <button class="btn btn-sm btn-danger bi bi-trash3" @onclick="@(() => HandleShowDeleteRuleSetDialog(ruleSet))"></button>
                </td>
            </tr>
        }
    }
    </tbody>
</table>

<BucketSelectDialog
    DataContext="@_bucketSelectDialogDataContext"
    IsDialogVisible="@_isBucketSelectDialogVisible"
    IsDialogLoading="@_isBucketSelectDialogLoading"
    OnBucketSelectedCallback="UpdateSelectedBucket"
    OnCancelCallback="@(() => _isBucketSelectDialogVisible = false)"/>

<DeleteConfirmationDialog 
    Title="Delete Rule" 
    Message="Do you really want to delete this Rule?" 
    IsDialogVisible="@_isDeleteRuleSetDialogVisible"
    OnDeleteClickCallback="DeleteRule"
    OnCancelClickCallback="CancelDeleteRule"/>

<ErrorMessageDialog 
    Title="Rules" 
    Message="@_errorModalDialogMessage" 
    IsDialogVisible="@_isErrorModalDialogVisible"
    OnClickCallback="@(() => _isErrorModalDialogVisible = false)"/>
